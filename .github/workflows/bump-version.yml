# Manually trigger version bump of NuvlaEdge Validation source code

name: Bump Validation version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'SemVer type of version bump: major / minor / patch'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest

    outputs:
      old_version: ${{ steps.versioning.outputs.OLD_VERSION }}
      new_version: ${{ steps.versioning.outputs.NEW_VERSION }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: "${{ secrets.PRIVATE_COMMIT_KEY }}"

      - name: SetUp python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Load cached poetry
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Bump version
        id: versioning
        run: |
          echo "OLD_VERSION=$(poetry version -s)" >> "$GITHUB_OUTPUT"
          poetry version ${{ github.event.inputs.version }}
          echo "NEW_VERSION=$(poetry version -s)" >> "$GITHUB_OUTPUT"
          poetry lock

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Changelog generator
        run: |
          npm -i generate-changelog -g

      - name: Generate Conventional Changelog
        run: |
          generate-changelog --${{ github.event.inputs.version }}
#      - name: Conventional Changelog Action
#        uses: TriPSs/conventional-changelog-action@v3.19.0
#        with:
#          git-push: 'false'
#          skip-version-file: 'true'
#          skip-commit: 'true'
#          skip-tag: 'true'
#          release-count: 0


#      - name: Generate ChangeLog
#        uses: heinrichreimer/github-changelog-generator-action@v2.3
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          base: "CHANGELOG.md"
#          futureRelease: "${{ steps.versioning.outputs.NEW_VERSION }}"

      - name: Generate new Tag
        run: |
          git config --global user.email "nuvlaedge-bot@sixsq.com"
          git config --global user.name "nuvlaedge-bot"
          git add poetry.lock pyproject.toml CHANGELOG.md
          git commit -m "Update ChangeLog for release ${{ steps.versioning.outputs.NEW_VERSION }}"
          git push origin main
          git tag "${{ steps.versioning.outputs.NEW_VERSION }}" -m "NuvlaEdge Version ${{ steps.versioning.outputs.NEW_VERSION }}"
          git push origin --tags