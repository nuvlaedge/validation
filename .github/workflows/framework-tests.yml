name: "Validation"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true


on:
  workflow_dispatch:


env:
  NUVLA_API_KEY: ${{secrets.VALIDATION_API_KEY}}
  NUVLA_API_SECRET: ${{secrets.VALIDATION_API_SECRET}}
  TESTBED_SSH_PUBLIC: ${{secrets.TESTBED_SSH_PUBLIC}}
  TESTBED_SSH_PRIVATE: ${{secrets.TESTBED_SSH_PRIVATE}}

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      boards: ${{ steps.set-boards.outputs.boards }}
      tests: ${{ steps.set-tests.outputs.tests }}
    steps:
      - id: set-boards
        run: |
          echo "boards=${{ vars.TESTBED_BOARDS }}" >> $GITHUB_OUTPUT

      - id: set-tests
        run: |
          echo "tests=${{ vars.VALIDATION_TESTS }}" >> $GITHUB_OUTPUT

  update-validator:
    needs: setup-matrix
    strategy:
      matrix:
        board-config: ${{ fromJSON(needs.setup-matrix.outputs.boards) }}
        validation-type: ${{ fromJSON(needs.setup-matrix.outputs.tests) }}
    runs-on: ${{ matrix.board-config }}

    steps:
      - name: Pull repo
        uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting for sonar
          fetch-depth: 0

      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Validation Framework dependency
        run: pip install validation-latest-py3-none-any.whl  --force-reinstall

      # FUTURE: Store results somewhere else?
      - name: Clear previous results
        run: |
          rm -f results/temp/xml/*.xml || true

      - name: Run Validation on board ${{ matrix.board-config }}
        run: |
          python -m validation_framework --target ${{ matrix.board-config }}.toml \
          --validator ${{ matrix.validation-type }} --microservice ${{ github.event.repository.name }}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          junit_files: "results/temp/xml/*.xml"
